on:
  release:
    types: [created]

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64]
        exclude:
          - goarch: "386"
            goos: darwin
        include:
          - goarch: "arm64"
            goos: darwin
    steps:
      - uses: actions/checkout@v2
      - uses: wangyoucao577/go-release-action@v1.17
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          extra_files: readme.md

      - name: Build yandex provider
        run: cd providers/yandex && GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} build --buildmode=plugin -o yandex-${{ matrix.goos }}-${{ matrix.goarch }}.so && cd ../../
      - name: Upload yandex provider
        run: github-assets-uploader -f providers/yandex/yandex-${{ matrix.goos }}-${{ matrix.goarch }}.so -mediatype application/x-binary -repo fgh151/dnscode -token ${{ secrets.GITHUB_TOKEN }} -tag ${GITHUB_REF##*/}
